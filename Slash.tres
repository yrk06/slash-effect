[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://Blood.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;


uniform vec3 Center = vec3(0.0);
uniform vec3 up = vec3(0,1,0);
uniform vec3 side = vec3(1,0,0);
uniform vec3 front = vec3(0,0,1);
uniform vec3 abc = vec3(1);
uniform bool bUseLocalPos = true;
uniform sampler2D Blood;
uniform float BloodT = 1.0;
uniform vec2 Offset = vec2(0);
uniform sampler2D BloodGradient;


varying vec3 LocalPos;
varying vec3 LocalUp;
varying vec3 LocalSide;
varying vec3 LocalFront;
varying vec3 v_vertex;

void vertex()
{
	v_vertex = VERTEX;
	if(!bUseLocalPos){LocalPos = (inverse(WORLD_MATRIX) * vec4(Center,1.0)).xyz;}else{LocalPos = Center;}
	/*LocalUp = (WORLD_MATRIX * vec4(up,1.0)).xyz;
	LocalSide = (WORLD_MATRIX * vec4(side,1.0)).xyz;
	LocalFront = (WORLD_MATRIX * vec4(front,1.0)).xyz;*/
	
	
}

void fragment()
{
	vec3 vertexPos = v_vertex - LocalPos;
	vec3 self;
	self.x = dot(normalize(side),vertexPos);
	self.y = dot(normalize(up),vertexPos);
	self.z = dot(normalize(front),vertexPos);
	ALBEDO = vec3(1);
	if(pow(self.x/abc.x,2) + pow(self.y/abc.y,2) + pow(self.z/abc.z,2) < 1.0    )
	{
		ALPHA = 0.0;
		//ALBEDO = vec3(0.5);
	}
	if(abc.z != 0.0 || abc.x != 0.0 || abc.y != 0.0  )
	{
		ALBEDO = vec3(0.5);
		vec2 MyUV = (clamp((self.xy + Offset)/ (abc.x + BloodT),-1.0,1.0) + 1.0)/2.0;
		float alpha = texture(Blood,MyUV).a;
		ALBEDO = mix(ALBEDO,texture(Blood,MyUV).rgb, alpha * texture(BloodGradient,vec2(length(self)/1.5,0.0)).r);
		
	}
}"

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0.680272, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/Center = Vector3( 0, 0, 1.60833 )
shader_param/up = Vector3( 0, 1, 0 )
shader_param/side = Vector3( 1, 0, 0 )
shader_param/front = Vector3( 0, 0, 1 )
shader_param/abc = Vector3( 1, 1, 1 )
shader_param/bUseLocalPos = false
shader_param/BloodT = 0.94
shader_param/Offset = Vector2( 0.15, 0.03 )
shader_param/Blood = ExtResource( 1 )
shader_param/BloodGradient = SubResource( 3 )
